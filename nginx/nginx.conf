# # events {
# #     worker_connections 1024;  # Adjust as needed
# # }

# # http {
#     server {
#         listen 80;
#         server_name 54.167.55.47; 

#         # Redirect HTTP to HTTPS
#         return 301 https://$host$request_uri;

#         # Frontend routing
#         location / {
#             root /usr/share/nginx/html; 
#             index index.html;
#             try_files $uri $uri/ /index.html; 
#         }

#         # Backend API routing
#         location /api/ {
#             proxy_pass http://0.0.0.0:8000; 
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }

#         location /ws/ {
#         proxy_pass http://localhost:8000;  # Forward WebSocket requests to Daphne
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        }

#         # Static files from Django
#         location /static/ {
#             alias /app/static/; 
#         }

#         location /media/ {
#             alias /app/media/; 
#         }

#         # Optional: Handle 404 errors
#         error_page 404 /index.html; 
#     }
# # }




# Set the worker connections (optional, adjust based on your server's resources)
worker_connections 1024;

# HTTP Configuration for redirecting HTTP to HTTPS
server {
    listen 80;
    server_name 54.167.55.47;  # Replace with your public IP or domain if available

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS Configuration
server {
    listen 443 ssl;
    server_name 54.167.55.47;  # Replace with your public IP or domain if available

    # SSL certificates (You can use a self-signed certificate or an ACM certificate)
    ssl_certificate /mycert/mywebsite.crt;  # Path to your SSL certificate
    ssl_certificate /mycert/mywebsite.key;  # Path to your SSL certificate
   

    # Enable SSL settings (optional, recommended)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_prefer_server_ciphers off;

    # Frontend routing - Serving React/Vite Build
    location / {
        root /usr/share/nginx/html; 
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    # Backend API routing - Forward API requests to Django
    location /api/ {
        proxy_pass http://0.0.0.0:8000;  # Adjust if your backend is running elsewhere
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # WebSocket routing (if you're using Django Channels)
    location /ws/ {
        proxy_pass http://localhost:8000;  # Forward WebSocket requests to Django
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Static files from Django (for handling assets like images, CSS, JavaScript)
    location /static/ {
        alias /app/static/;  # Adjust the path to where your Django static files are located
    }

    # Media files (for file uploads, etc.)
    location /media/ {
        alias /app/media/;  # Adjust the path to where your Django media files are located
    }

    # Optional: Handle 404 errors by redirecting to the React index.html
    error_page 404 /index.html;
}
